#include <iostream>
#include <cstdlib>
#include <stdexcept>

#include "LedFillGear.h"
#include "LedBlinkGear.h"
#include "SecondHand.h"
#include "LedSweepGear.h"

#include "antlights.h"

const unsigned char turnSignalLeftRGB[] = {
  0x0,0x0,0x0,  0x0,0x0,0x0,  0x0,0x0,0x0,  0x0,0x0,0x0,
  0x0,0x0,0x0,  0x0,0x0,0x0,  0x0,0x0,0x0,  0x0,0x0,0x0,
  0x0,0x0,0x0,  0x0,0x0,0x0,  0x0,0x0,0x0,  0x0,0x0,0x0,
  0x0,0x0,0x0,  0x0,0x0,0x0,  0xFF,0xFF,0x0,0xFF,0xFF,0x0,
  0xFF,0xFF,0x0,0xFF,0xFF,0x0,0x0,0x0,0x0,  0x0,0x0,0x0,
  0xFF,0xFF,0x0,0xFF,0xFF,0x0,0xFF,0xFF,0x0,0x0,0x0,0x0};
const unsigned char turnSignalRightRGB[] = {
  0x0,0x0,0x0,  0xFF,0xFF,0x0,0xFF,0xFF,0x0,0xFF,0xFF,0x0,
  0x0,0x0,0x0,  0x0,0x0,0x0,  0xFF,0xFF,0x0, 0xFF,0xFF,0x0,
  0xFF,0xFF,0x0,0xFF,0xFF,0x0,0x0,0x0,0x0,  0x0,0x0,0x0,
  0x0,0x0,0x0,  0x0,0x0,0x0,  0x0,0x0,0x0,  0x0,0x0,0x0,
  0x0,0x0,0x0,  0x0,0x0,0x0,  0x0,0x0,0x0,  0x0,0x0,0x0,
  0x0,0x0,0x0,  0x0,0x0,0x0,  0x0,0x0,0x0,  0x0,0x0,0x0};
const unsigned char brakesRGB[] = {
  0xFF,0x0,0x0, 0xFF,0x00,0x0,0x0,0x0,0x0,  0x0,0x0,0x0,
  0x0,0x0,0x0,  0x0,0x0,0x0,  0x0,0x0,0x0,  0x0,0x0,0x0,
  0x0,0x0,0x0,  0x0,0x0,0x0,  0x0,0x0,0x0,  0x0,0x0,0x0,
  0x0,0x0,0x0,  0x0,0x0,0x0,  0x0,0x0,0x0,  0x0,0x0,0x0,
  0x0,0x0,0x0,  0x0,0x0,0x0,  0x0,0x0,0x0,  0x0,0x0,0x0,
  0x0,0x0,0x0,  0x0,0x0,0x0,  0xFF,0x0,0x0, 0xFF,0x0,0x0};
const unsigned char runningLightsRGB[] = {
  0x0,0x0,0x0,   0x3F,0x00,0x0, 0x3f,0x3f,0x0, 0x0,0x0,0x0,
  0x0,0x0,0x0,   0x0,0x0,0x0,   0x0,0x0,0x0,   0x3f,0x3f,0x0,
  0x0,0x0,0x0,   0x0,0x0,0x0,   0x1f,0x1f,0x1f,0x7f,0x7f,0x7f,
  0x7f,0x7f,0x7f,0x1f,0x1f,0x1f,0x0,0x0,0x0,   0x0,0x0,0x0,
  0x3f,0x3f,0x0, 0x0,0x0,0x0,   0x0,0x0,0x0,   0x0,0x0,0x0,
  0x0,0x0,0x0,   0x3f,0x3f,0x0, 0x3F,0x0,0x0,  0x0,0x0,0x0};

LedBlinkGear* turnLeft;
LedBlinkGear* turnRight;
LedBlinkGear* brakes;
LedBlinkGear* runningLights;
LedSweepGear* kitt;
LedSweepGear* security;
  spinner->insertGear(new LedBlinkGear(0,24,0,0,0,0,1,100));

#define LED_REFRESH_RATE_HZ 50 
SecondHand* LedSpinner;

void startThreads() {
  LedSweepGear* headlight=(new LedSweepGear(8,8,3,30,50))->configure(0xff,0xff,0xff,5);
  LedSweepGear* security=(new LedSweepGear(0,24,2,20,50))->configure(0x7f,0,0,4);
  LedSpinner=new SecondHand(LED_REFRESH_RATE_HZ);
}

void* commandline(void* arg) {
  bool quit=false;
  string cmd="";
  while(!quit) {
    std::cout <<"antlight:";
    getline(std::cin, cmd);
    if(cmd.compare(0,1,"b")) {
      std::cout << "brakes " << brakes->toggle(true)->isActive()?"on":"off" 
		<< std::endl;
    } else if(cmd.compare(0,1,"k")) {
      std::cout << "kitt " << kitt->toggle(true)->isActive()?"on":"off" 
		<< std::endl;
    } else if(cmd.compare(0,1,"l")) {
      turnRight->stop();
      turnLeft->start()->recenter();
      std::cout << "left turn" << std::endl;
    } else if(cmd.compare(0,1,"r")) {
      turnLeft->stop();
      turnRight->start()->recenter();
      std::cout << "left turn" << std::endl;
    } else if(cmd.compare(0,1,"c")) {
      turnLeft->stop();
      turnRight->stop();
      std::cout << "no turn" << std::endl;
    } else if(cmd.compare(0,1,"n")) {
      std::cout << "running lights " 
		<< runningLights->toggle(true)->isActive()?"on":"off" 
		<< std::endl;
    } else if(cmd.compare(0,1,"s")) {
      std::cout << "security " 
		<< security->toggle(true)->isActive()?"on":"off" 
		<< std::endl;
    } else if(cmd.compare(0,1,"q")) {
      quit=true;
      std::cout << "quit " 
		<< std::endl;
    }
  }
  return NULL;
}
